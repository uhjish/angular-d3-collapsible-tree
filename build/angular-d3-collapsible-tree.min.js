"use strict";function collapsibleTree(){return{restrict:"E",scope:{width:"=",height:"=",radius:"=",nodes:"="},link:function(a,b){function c(a){var b=d3.event&&d3.event.altKey?5e3:500,f=j.nodes(e).reverse();f.forEach(function(a){a.y=180*a.depth});var g=l.selectAll("g.node").data(f,function(a){return a.id||(a.id=++i)}),h=g.enter().append("svg:g").attr("class","node").attr("transform",function(b){return"translate("+a.y0+","+a.x0+")"}).on("click",function(a){d(a),c(a)});h.append("svg:circle").attr("r",1e-6).style("fill",function(a){return a._children?"lightsteelblue":"#fff"}),h.append("svg:text").attr("x",function(a){return a.children||a._children?-10:10}).attr("dy",".35em").attr("text-anchor",function(a){return a.children||a._children?"end":"start"}).text(function(a){return a.name}).style("fill-opacity",1e-6);var m=g.transition().duration(b).attr("transform",function(a){return"translate("+a.y+","+a.x+")"});m.select("circle").attr("r",4.5).style("fill",function(a){return a._children?"lightsteelblue":"#fff"}),m.select("text").style("fill-opacity",1);var n=g.exit().transition().duration(b).attr("transform",function(b){return"translate("+a.y+","+a.x+")"}).remove();n.select("circle").attr("r",1e-6),n.select("text").style("fill-opacity",1e-6);var o=l.selectAll("path.link").data(j.links(f),function(a){return a.target.id});o.enter().insert("svg:path","g").attr("class","link").attr("d",function(b){var c={x:a.x0,y:a.y0};return k({source:c,target:c})}).transition().duration(b).attr("d",k),o.transition().duration(b).attr("d",k),o.exit().transition().duration(b).attr("d",function(b){var c={x:a.x,y:a.y};return k({source:c,target:c})}).remove(),f.forEach(function(a){a.x0=a.x,a.y0=a.y})}function d(a){a.children?(a._children=a.children,a.children=null):(a.children=a._children,a._children=null)}var e,f=[20,120,20,120],g=1280-f[1]-f[3],h=800-f[0]-f[2],i=0,j=d3.layout.tree().size([h,g]),k=d3.svg.diagonal().projection(function(a){return[a.y,a.x]}),l=d3.select("collapsible-tree").append("svg:svg").attr("width",g+f[1]+f[3]).attr("height",h+f[0]+f[2]).append("svg:g").attr("transform","translate("+f[3]+","+f[0]+")");a.$watch("nodes",function(){function b(a){a.children&&(a.children.forEach(b),d(a))}a.nodes&&(e=angular.copy(a.nodes),e.x0=h/2,e.y0=0,e.children.forEach(b),d(e.children[1]),d(e.children[1].children[2]),d(e.children[9]),d(e.children[9].children[0]),c(e))},!0)}}}var app=angular.module("ngcollapsibletree",[]);app.directive("collapsibleTree",collapsibleTree),collapsibleTree.$inject=[],"object"==typeof module&&(module.exports="ngcollapsibletree");